chooseCRANmirror()
install.packages
install.packages("rmarkdown")
library(rmakdown)
library(rmarkdown)
library(rmarkdown)
install.packages("stringi")
install.packages("stringr")
file.remove("/vsc-hard-mounts/leuven-data/350/vsc35094/miniconda3/lib/R/library/00LOCK-stringi")
unlink("/vsc-hard-mounts/leuven-data/350/vsc35094/miniconda3/lib/R/library/stringi", recursive = TRUE)
install.packages("stringi")
rm /vsc-hard-mounts/leuven-data/350/vsc35094/miniconda3/lib/R/library/00LOCK-stringi
file.remove("/vsc-hard-mounts/leuven-data/350/vsc35094/miniconda3/lib/R/library/00LOCK-stringi")
q()
.libPaths("~/R_libs")
install.packages("stringi", lib = "~/R_libs")
library(stringi)
install.packages("stringr", lib = "~/R_libs")
install.packages("rmarkdown", lib = "~/R_libs")
library(rmarkdown)
rmarkdown::render("Preprocess.Rmd")
pandoc --version
q()
rmarkdown::render("Preprocess.Rmd")
?rmarkdown::pandoc_available
pandoc_version()
library(pandoc)
install.packages("pandoc", lib = "~/R_libs")
library(pandoc)
pandoc_version()
rmarkdown::render("Preprocess.Rmd")
library(knitr)
knit("Preprocess.Rmd", output = "Preprocess.html")
knit("Process.Rmd", output = "Process.html")
install.packages("tidyverse")
install.packages("ragg", lib = "~/R_libs")
install.packages("textshaping", lib = "~/R_libs")
install.packages("textshaping")
q()
source("Preprocess.R")
source("Preprocess.R")
source("Process.R")
install.library("tidyverse")
install.package("tidyverse")
install.packages("")
q()
library(tidyverse)
install.packages("rlang")
library(tidyverse)
q()
library(tidyverse)
q()
library(knitr)
knit("MergeMutationsCNV.Rmd", output = "MergeMutationsCNV.html")
q()
ls()
rm(list = ls())
ls()
q()
Sys.setenv(OMP_NUM_THREADS = 1)
library(knitr)
knit("MergeMutationsCNV.Rmd", output = "MergeMutationsCNV.html")
knit("MergeMutationsCNV.Rmd", output = "MergeMutationsCNV.html")
install.packages("dplyr")
library(knitr)
knit("Preprocess.Rmd", output = "Preprocess.html")
knit("Preprocess.Rmd", output = "Preprocess.html")
ls()
knit("Preprocess.Rmd", output = "Preprocess.html")
ls()
head(mutation_data_merged)
head(mutation_data_merged_simplified)
unique(mutation_data_merged_simplified$Mutation
)
unique(mutation_data_merged$Mutation)
unlink(ls())
ls()
unlink(list.files())
ls()
rm(cnv_data_processed)
rm(mutation_data_merged)
rm(mutation_data_merged_simplified)
ls()
knit("Preprocess.Rmd", output = "Preprocess.html")
ls()
ls()
knit("Preprocess.Rmd", output = "Preprocess.html")
q()
ls()
library(knitr)
 merged_data <- read.csv("data/merged/merged_data.csv", stringsAsFactors = FALSE)

ls()
unique(merged_data$Mutation)
head(merged_data)
merged_data %>%
  filter(acronym == "ACC", Hugo_Symbol == "AADACL4") %>%
  print()
library(dplry)
library(dplyr)
merged_data %>%
  filter(acronym == "ACC", Hugo_Symbol == "AADACL4") %>%
  print()
filtered_rows <-  merged_data %>%
  filter(acronym == "ACC", Hugo_Symbol == "AADACL4")
write.csv(filtered_rows, "data/merged/filtered_rows.csv", row.names = FALSE)

head(merged_data)
knit("CountGeneCancerPairs.Rmd", output = "CountGeneCancerPairs.html")
knit("CountGeneCancerPairs.Rmd", output = "CountGeneCancerPairs.html")
knit("FishersTest.Rmd", output = "FishersTest.html")
knit("FishersTest.Rmd", output = "FishersTest.html")
ls()
nrow(positive)
nrow(negative)
nrow(combinations_counts)
positive <- subset(combinations_counts, cnv_positive_mut != 0)

nrow(positive)
positive <- combinations_counts %>%
  filter(cnv_positive_mut > 0)
nrow(positive)
head(combinations_counts)
unique(combinations_counts$cnv_positive_mut)
unique(combinations_counts$cnv_negative_mut)
unique(combinations_counts$mut_only)
ls()
head(final_table)
unique(final_table$cnv_positive_mut)
unique(final_table$cnv_negative_mut)
ls()
colnames(merged_data)
unique(merged_data$Mutation)
merged_data %>%
  filter(Mutation == 1 & CNV %in% c(1, 2))
merged_data %>%
  filter(Mutation == 1 & CNV %in% c(-1, -2))
sum(merged_data$Mutation == 1 & merged_data$CNV %in% c(1, 2))
sum(merged_data$Mutation == 1)
sum(merged_data$Mutation == 1, na.rm = TRUE)
sum(merged_data$Mutation == 1 & merged_data$CNV %in% c(1, 2), na.rm = TRUE)
knit("CountGeneCancerPairs.Rmd", output = "CountGeneCancerPairs.html")
ls()
unique(combinations_counts$cnv_negative_mut)
unique(combinations_counts$cnv_positive_mut)
sum(merged_data$Mutation == 1 & merged_data$CNV %in% c(1, 2), na.rm = TRUE)
str(merged_data)
head(merged_data)
knit("CountGeneCancerPairs.Rmd", output = "CountGeneCancerPairs.html")
unique(combinations_counts$cnv_positive_mut)
unique(combinations_counts$cnv_negative_mut)
knit("CountGeneCancerPairs.Rmd", output = "CountGeneCancerPairs.html")
unique(combinations_counts$cnv_negative_mut)
unique(combinations_counts$cnv_positive_mut)
sum(merged_data$Mutation == 1 & merged_data$CNV %in% c(1, 2), na.rm = TRUE)
ls()
nrow(counts)
nrow(all_combinations)
head(counts)
head(counts)[7:8]
unique(counts$cnv_positive_mut)
unique(counts$cnv_negative_mut)
head(counts,2)
head(all_combinations, 2)
knit("CountGeneCancerPairs.Rmd", output = "CountGeneCancerPairs.html")
unique(counts$cnv_negative_mut)
unique(counts$cnv_positive_mut)
knit("FishersTest.Rmd", output = "FishersTest.html")
knit("FishersTest.Rmd", output = "FishersTest.html")
ls()
fisher_result.estimate
fisher_result
fisher_result$value
fisher_result$estimate
knit("FishersTest.Rmd", output = "FishersTest.html")
knit("FishersTest.Rmd", output = "FishersTest.html")
knit("MakeGraphs.Rmd", output = "MakeGraphs.html")
q()
